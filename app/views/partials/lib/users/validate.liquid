{% assign CANT_BE_BLANK = "can't be blank" %}
{% assign EMAIL_ALREADY_TAKEN = "already taken" %}

{% liquid
  assign valid = true
  assign errors = '{}' | parse_json

  if object.email == null or object.email == empty
    include 'lib/register_error', hash: errors, field_name: 'email', key: 'app.errors.blank'
  else
    graphql emails_count = 'users/emails_count', email: object.email | dig: 'users', 'total_entries'
    if emails_count > 0
      include 'lib/register_error', hash: errors, field_name: 'email', key: 'app.errors.taken'
    endif
  endif

  if object.password == null or object.password == empty
    include 'lib/register_error', hash: errors, field_name: 'password', key: 'app.errors.blank'
  endif

  if errors != empty
    assign valid = false
  endif

  export object
  export errors, namespace: "object"
  export valid,  namespace: "object"
%}
